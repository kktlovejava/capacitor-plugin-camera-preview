{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAqDA,MAAM,CAAN,IAAY,cAOX;AAPD,WAAY,cAAc;IACxB,yEAAmB,CAAA;IACnB,yEAAmB,CAAA;IACnB,yEAAmB,CAAA;IACnB,2EAAoB,CAAA;IACpB,qEAAiB,CAAA;IACjB,qEAAiB,CAAA;AACnB,CAAC,EAPW,cAAc,KAAd,cAAc,QAOzB","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\nimport { DCEFrame } from \"dynamsoft-camera-enhancer\";\n\nexport interface CameraPreviewPlugin {\n  initialize(): Promise<void>;\n  getResolution(): Promise<{resolution: string}>;\n  setResolution(options: {resolution: number}): Promise<void>;\n  getAllCameras(): Promise<{cameras: string[]}>;\n  getSelectedCamera(): Promise<{selectedCamera: string}>;\n  selectCamera(options: {cameraID: string; }): Promise<void>;\n  setScanRegion(options: {region:ScanRegion}): Promise<void>;\n  setZoom(options: {factor: number}): Promise<void>;\n  setFocus(options: {x: number, y: number}): Promise<void>;\n  /**\n  * Web Only\n  */\n  setDefaultUIElementURL(url:string): Promise<void>;\n  startCamera(): Promise<void>;\n  stopCamera(): Promise<void>;\n  pauseCamera(): Promise<void>;\n  resumeCamera(): Promise<void>;\n  /**\n  * take a snapshot as base64.\n  */\n  takeSnapshot(options:{quality?:number}): Promise<{base64:string}>;\n  /**\n  * take a snapshot as DCEFrame. Web Only\n  */\n  takeSnapshot2(): Promise<{frame:DCEFrame}>;\n  takePhoto(): Promise<{base64:string}>;\n  toggleTorch(options: {on: boolean}): Promise<void>;\n  requestCameraPermission(): Promise<void>;\n  isOpen():Promise<{isOpen:boolean}>;\n  addListener(\n    eventName: 'onPlayed',\n    listenerFunc: onPlayedListener,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n  removeAllListeners(): Promise<void>;\n}\n\nexport type onPlayedListener = (result:{resolution:string}) => void;\n\n/**\n * measuredByPercentage: 0 in pixel, 1 in percent\n */\nexport interface ScanRegion{\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n  measuredByPercentage: number;\n}\n\nexport enum EnumResolution {\n  RESOLUTION_AUTO = 0,\n  RESOLUTION_480P = 1,\n  RESOLUTION_720P = 2,\n  RESOLUTION_1080P = 3,\n  RESOLUTION_2K = 4,\n  RESOLUTION_4K = 5\n}\n"]}