{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { CameraEnhancer, DCEFrame, PlayCallbackInfo } from 'dynamsoft-camera-enhancer';\nimport { CameraPreviewPlugin, EnumResolution, ScanRegion } from './definitions';\n\nCameraEnhancer.defaultUIElementURL = \"https://cdn.jsdelivr.net/npm/dynamsoft-camera-enhancer@3.1.0/dist/dce.ui.html\";\n\nexport class CameraPreviewWeb extends WebPlugin implements CameraPreviewPlugin {\n  private camera:CameraEnhancer | undefined;\n  async setDefaultUIElementURL(url: string): Promise<void> {\n    CameraEnhancer.defaultUIElementURL = url;\n  }\n\n  async initialize(): Promise<void> {\n    this.camera = await CameraEnhancer.createInstance();\n    this.camera.on(\"played\", (playCallBackInfo:PlayCallbackInfo) => {\n      this.notifyListeners(\"onPlayed\", {resolution:playCallBackInfo.width+\"x\"+playCallBackInfo.height});\n    });\n    await this.camera.setUIElement(CameraEnhancer.defaultUIElementURL);\n\n    this.camera.getUIElement().getElementsByClassName(\"dce-btn-close\")[0].remove();\n    this.camera.getUIElement().getElementsByClassName(\"dce-sel-camera\")[0].remove();\n    this.camera.getUIElement().getElementsByClassName(\"dce-sel-resolution\")[0].remove();\n    this.camera.getUIElement().getElementsByClassName(\"dce-msg-poweredby\")[0].remove();\n  }\n\n  async getResolution(): Promise<{ resolution: string; }> {\n    if (this.camera) {\n      let rsl = this.camera.getResolution();\n      let resolution:string = rsl[0] + \"x\" + rsl[1];\n      return {resolution: resolution};\n    }else{\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async setResolution(options: { resolution: number; }): Promise<void> {\n    if (this.camera) {\n      let res = options.resolution;\n      let width = 1280;\n      let height = 720;\n      if (res == EnumResolution.RESOLUTION_480P){\n         width = 640;\n         height = 480;\n      } else if (res == EnumResolution.RESOLUTION_720P){\n        width = 1280;\n        height = 720;\n      } else if (res == EnumResolution.RESOLUTION_1080P){\n        width = 1920;\n        height = 1080;\n      } else if (res == EnumResolution.RESOLUTION_2K){\n        width = 2560;\n        height = 1440;\n      } else if (res == EnumResolution.RESOLUTION_4K){\n        width = 3840;\n        height = 2160;\n      }\n      await this.camera.setResolution(width,height);\n      return;\n    } else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async getAllCameras(): Promise<{ cameras: string[]; }> {\n    if (this.camera) {\n      let cameras = await this.camera.getAllCameras();\n      let labels:string[] = [];\n      cameras.forEach(camera => {\n        labels.push(camera.label);\n      });\n      return {cameras:labels};\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async getSelectedCamera(): Promise<{ selectedCamera: string; }> {\n    if (this.camera) {\n      let cameraInfo = this.camera.getSelectedCamera();\n      return {selectedCamera:cameraInfo.label};\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async selectCamera(options: { cameraID: string; }): Promise<void> {\n    if (this.camera) {\n      let cameras = await this.camera.getAllCameras()\n      for (let index = 0; index < cameras.length; index++) {\n        const camera = cameras[index];\n        if (camera.label === options.cameraID) {\n          await this.camera.selectCamera(camera);\n          return;\n        }\n      }\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async setScanRegion(options: { region: ScanRegion; }): Promise<void> {\n    if (this.camera){\n      this.camera.setScanRegion({\n        regionLeft:options.region.left,\n        regionTop:options.region.top,\n        regionRight:options.region.right,\n        regionBottom:options.region.bottom,\n        regionMeasuredByPercentage: options.region.measuredByPercentage\n      })\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async setZoom(options: { factor: number; }): Promise<void> {\n    if (this.camera) {\n      await this.camera.setZoom(options.factor);\n      return;\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async setFocus(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  async toggleTorch(options: { on: boolean; }): Promise<void> {\n    if (this.camera) {\n      try{\n        if (options[\"on\"]){\n          await this.camera.turnOnTorch();\n        }else{\n          await this.camera.turnOffTorch();\n        }\n      } catch (e){\n        throw new Error(\"Torch unsupported\");\n      }\n    }\n  }\n\n  async startCamera(): Promise<void> {\n    if (this.camera) {\n      await this.camera.open(true);\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async stopCamera(): Promise<void> {\n    if (this.camera) {\n      this.camera.close(true);\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async pauseCamera(): Promise<void> {\n    if (this.camera) {\n      this.camera.pause();\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async resumeCamera(): Promise<void> {\n    if (this.camera) {\n      this.camera.resume();\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async isOpen(): Promise<{isOpen:boolean}> {\n    if (this.camera) {\n      return {isOpen:this.camera.isOpen()};\n    }else{\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async takeSnapshot(options:{quality?:number}): Promise<{ base64: string;}> {\n    if (this.camera) {\n      let desiredQuality = 85;\n      if (options.quality) {\n        desiredQuality = options.quality;\n      }\n      let dataURL = this.camera.getFrame().toCanvas().toDataURL('image/jpeg',desiredQuality);\n      let base64 = dataURL.replace(\"data:image/jpeg;base64,\",\"\");\n      return {base64:base64};\n    }else{\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async takeSnapshot2(): Promise<{ frame: DCEFrame; }> {\n    if (this.camera) {\n      let frame = this.camera.getFrame();\n      return {frame:frame};\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async takePhoto(): Promise<{ base64: string; }> {\n    if (this.camera) {\n      let dataURL = this.camera.getFrame().toCanvas().toDataURL();\n      return {base64:dataURL};\n    }else {\n      throw new Error('DCE not initialized');\n    }\n  }\n\n  async requestCameraPermission(): Promise<void> {\n    const constraints = {video: true, audio: false};\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    const tracks = stream.getTracks();\n    for (let i=0;i<tracks.length;i++) {\n      const track = tracks[i];\n      track.stop();  // stop the opened camera\n    }\n  }\n}\n"]}